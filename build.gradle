plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.4'
  id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}
// dependencyManagement 에서 버전을 확인할수 있다.
//print(dependencyManagement)

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  //spring data rest(rest repositories)
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'

  //spring data rest(rest repositories HAL explorer)
  implementation 'org.springframework.data:spring-data-rest-hal-explorer'

  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'

  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

  // thymeleaf
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

  // queryDSL 설정
  implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
  implementation "com.querydsl:querydsl-core:5.0.0"
  annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
  annotationProcessor "jakarta.annotation:jakarta.annotation-api"
  annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
  useJUnitPlatform()
  jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}
// querydsl 적용
def generated='src/main/generated'

// querydsl QClass 파일 위치를 잡아주는 설정
tasks.withType(JavaCompile) {
  options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
  main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
  delete file(generated)
}
/*
// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(javaCompile) {
  options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
  main.java.srcDirs += [ generated ]
}

// gradle clean 시 QClass 디렉토리 삭제
clean {
  delete file(generated)
}
*/
